var searchIndex = new Map(JSON.parse('[["diffy",{"t":"FGPPPFFFPGPFFFFHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ApplyError","ConflictStyle","Context","Delete","Diff3","DiffOptions","Hunk","HunkRange","Insert","Line","Merge","MergeOptions","ParsePatchError","Patch","PatchFormatter","apply","apply_bytes","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","create_patch","","create_patch_bytes","","default","","","end","eq","","","","fmt","","","","","","","","","","","","","","fmt_patch","from","","","","","","","","","","from_bytes","from_str","function_context","hunks","into","","","","","","","","","","is_empty","len","lines","merge","","merge_bytes","","modified","new","","","new_range","old_range","original","range","reverse","","","set_conflict_marker_length","set_conflict_style","set_context_len","start","to_bytes","to_owned","","","","","to_string","","","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","with_color","write_patch_into"],"q":[[0,"diffy"],[167,"diffy::patch"],[168,"alloc::string"],[169,"diffy::apply"],[170,"core::result"],[171,"alloc::vec"],[172,"diffy::merge"],[173,"alloc::borrow"],[174,"core::marker"],[175,"diffy::diff"],[176,"diffy::patch::format"],[177,"core::cmp"],[178,"core::fmt"],[179,"diffy::patch::parse"],[180,"core::borrow"],[181,"core::option"],[182,"core::ops::range"],[183,"core::convert"],[184,"core::any"],[185,"std::io::error"],[186,"std::io"]],"i":"``B`0Af```1`0``````jBd2BfBhCdfAlAn97685432109821098210982109`6`665402109776854332210094768543210922127685432109001`5`5265411202195560282109732076854321097685432109768543210944","f":"```````````````{{{d{b}}{d{{f{b}}}}}{{l{hj}}}}{{{d{{A`{n}}}}{d{{f{{A`{n}}}}}}}{{l{{Ab{n}}j}}}}{d{{d{c}}}{}}000000000{{{d{Ad}}}{{d{Adc}}}{}}000000000{{{d{Af}}}Af}{{{d{{f{c}}}}}{{f{c}}}{AhAj}}{{{d{{Al{c}}}}}{{Al{c}}}Aj}{{{d{An}}}An}{{{d{{B`{c}}}}}{{B`{c}}}Aj}{{d{d{Adc}}}Bb{}}0000{dBb}0000{{{d{b}}{d{b}}}{{f{b}}}}{{{d{Bd}}{d{b}}{d{b}}}{{f{b}}}}{{{d{{A`{n}}}}{d{{A`{n}}}}}{{f{{A`{n}}}}}}{{{d{Bd}}{d{{A`{n}}}}{d{{A`{n}}}}}{{f{{A`{n}}}}}}{{}Bd}{{}Bf}{{}Bh}{{{d{An}}}Bj}{{{d{{f{c}}}}{d{{f{c}}}}}Bl{BnAhAj}}{{{d{{Al{c}}}}{d{{Al{c}}}}}Bl{BnAj}}{{{d{An}}{d{An}}}Bl}{{{d{{B`{c}}}}{d{{B`{c}}}}}Bl{BnAj}}{{{d{j}}{d{AdC`}}}Cb}0{{{d{Bd}}{d{AdC`}}}Cb}{{{d{Af}}{d{AdC`}}}Cb}{{{d{Bf}}{d{AdC`}}}Cb}{{{d{Bh}}{d{AdC`}}}Cb}{{{d{Cd}}{d{AdC`}}}Cb}0{{{d{{f{b}}}}{d{AdC`}}}Cb}{{{d{{f{c}}}}{d{AdC`}}}Cb{{Ah{}{{Cf{}}}}ChAj}{{Cj{c}}Ch}}{{{d{{Al{c}}}}{d{AdC`}}}Cb{ChAj}}{{{d{An}}{d{AdC`}}}Cb}0{{{d{{B`{c}}}}{d{AdC`}}}Cb{ChAj}}{{{d{Bh}}{d{{f{b}}}}}{{`{Cl}}}}{cc{}}000000000{{{d{{A`{n}}}}}{{l{{f{{A`{n}}}}Cd}}}}{{{d{b}}}{{l{{f{b}}Cd}}}}{{{d{{Al{c}}}}}{{Cn{{d{c}}}}}Aj}{{{d{{f{c}}}}}{{d{{A`{{Al{c}}}}}}}{AhAj}}{{}c{}}000000000{{{d{An}}}Bl}{{{d{An}}}Bj}{{{d{{Al{c}}}}}{{d{{A`{{B`{c}}}}}}}Aj}{{{d{b}}{d{b}}{d{b}}}{{l{hh}}}}{{{d{Bf}}{d{b}}{d{b}}{d{b}}}{{l{hh}}}}{{{d{{A`{n}}}}{d{{A`{n}}}}{d{{A`{n}}}}}{{l{{Ab{n}}{Ab{n}}}}}}{{{d{Bf}}{d{{A`{n}}}}{d{{A`{n}}}}{d{{A`{n}}}}}{{l{{Ab{n}}{Ab{n}}}}}}{{{d{{f{c}}}}}{{Cn{{d{c}}}}}{AhAj}}{{}Bd}{{}Bf}{{}Bh}{{{d{{Al{c}}}}}AnAj}04{{{d{An}}}{{D`{Bj}}}}{{{d{{f{c}}}}}{{f{c}}}{AhAj}}{{{d{{Al{c}}}}}{{Al{c}}}Aj}{{{d{{B`{c}}}}}{{B`{c}}}Aj}{{{d{AdBf}}Bj}{{d{AdBf}}}}{{{d{AdBf}}Af}{{d{AdBf}}}}{{{d{AdBd}}Bj}{{d{AdBd}}}}{{{d{An}}}Bj}{{{d{{f{c}}}}}{{Ab{n}}}{{Db{{A`{n}}}}AhAj}}{dc{}}0000{dh}000{c{{l{e}}}{}{}}000000000{{}{{l{c}}}{}}000000000{dDd}000000000{BhBh}{{{d{Bh}}{d{{f{c}}}}e}{{Df{Bb}}}{Ah{Db{{A`{n}}}}Aj}Dh}","D":"Hl","p":[[1,"str"],[1,"reference"],[5,"Patch",0,167],[5,"String",168],[5,"ApplyError",0,169],[6,"Result",170],[1,"u8"],[1,"slice"],[5,"Vec",171],[0,"mut"],[6,"ConflictStyle",0,172],[10,"ToOwned",173],[10,"Sized",174],[5,"Hunk",0,167],[5,"HunkRange",0,167],[6,"Line",0,167],[1,"unit"],[5,"DiffOptions",0,175],[5,"MergeOptions",0,172],[5,"PatchFormatter",0,176],[1,"usize"],[1,"bool"],[10,"PartialEq",177],[5,"Formatter",178],[8,"Result",178],[5,"ParsePatchError",0,179],[17,"Owned"],[10,"Debug",178],[10,"Borrow",180],[10,"Display",178],[6,"Option",181],[5,"Range",182],[10,"AsRef",183],[5,"TypeId",184],[8,"Result",185],[10,"Write",186]],"r":[[0,169],[1,172],[5,175],[6,167],[7,167],[9,167],[11,172],[12,179],[13,167],[14,176],[15,169],[16,169],[52,175],[54,175],[106,172],[108,172]],"b":[[64,"impl-Debug-for-ApplyError"],[65,"impl-Display-for-ApplyError"],[70,"impl-Debug-for-ParsePatchError"],[71,"impl-Display-for-ParsePatchError"],[72,"impl-Display-for-Patch%3C\'_,+str%3E"],[73,"impl-Debug-for-Patch%3C\'_,+T%3E"],[75,"impl-Debug-for-HunkRange"],[76,"impl-Display-for-HunkRange"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGEABwASACIAOQACAD0AEQB3AAAAeQAAAH8AJgCnAAAA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[4809]}